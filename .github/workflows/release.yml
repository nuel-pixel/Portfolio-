<<<<<<< HEAD
name: Release
 
on:
  push:
    branches:
      - main
 
jobs:
  release:
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
 
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"
 
      - name: Install dependencies
        run: npm install
 
      - name: Configure Git user
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
 
      - name: Bump version and create changelog
        id: bump_version
        run: |
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV
 
      - name: Push changes and tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin main --follow-tags
 
      - name: Get release notes from CHANGELOG.md
        id: get_release_notes
        run: |
          # Extract the release notes for the new version
          RELEASE_NOTES=$(awk -v version="## [${{ env.new_version }}]" '
            BEGIN { in_section = 0 }
            $0 ~ version { in_section = 1; next }
            $0 ~ /^## \[.*\]/ && in_section { in_section = 0 }
            in_section { print }
          ' CHANGELOG.md)
          echo "release_notes<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
 
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ env.new_version }}"
          release_name: "Release v${{ env.new_version }}"
          body: ${{ env.release_notes }}
          draft: false
          prerelease: false
=======
name: Auto Generate Release Notes and Tags

on:
  push:
    branches:
      - main  # Adjust to your default branch
  pull_request:
    types:
      - closed
      - merged
  workflow_dispatch:

jobs:
  draft-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Draft Release
        uses: release-drafter/release-drafter@v5

  create-release:
    runs-on: ubuntu-latest
    needs: draft-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get the latest release draft
        id: get_release
        uses: actions/github-script@v6
        with:
          script: |
            const { data: releases } = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const draftRelease = releases.find(release => release.draft);
            core.setOutput('draft_release_id', draftRelease.id);
            core.setOutput('draft_release_tag', draftRelease.tag_name);

      - name: Publish the release
        uses: actions/github-script@v6
        with:
          script: |
            await github.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ steps.get_release.outputs.draft_release_id }},
              draft: false
            });

      - name: Create and push the tag
        run: |
          git tag ${{ steps.get_release.outputs.draft_release_tag }}
          git push origin ${{ steps.get_release.outputs.draft_release_tag }}
>>>>>>> 453725cd84dd4bd2a224e88feae20b5aeaa04753
